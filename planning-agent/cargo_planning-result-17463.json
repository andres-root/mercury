{
    "tests": [
        {
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_ioyvgmez/test_my_air_cargo_problems.py\", line 147, in test_ACP3_values\n    self.assertCorrectValues(['C1', 'C2', 'C3', 'C4'], ['P1' ,'P2'], ['ATL', 'JFK', 'ORD', 'SFO'])\n  File \"/home/vmuser_ioyvgmez/test_my_air_cargo_problems.py\", line 49, in assertCorrectValues\n    self.assertEqual(sorted(self.p.planes), planes)\nAssertionError: Lists differ: ['P1', 'P2', 'P3', 'P4'] != ['P1', 'P2']\n\nFirst list contains 2 additional elements.\nFirst extra element 2:\n'P3'\n\n- ['P1', 'P2', 'P3', 'P4']\n+ ['P1', 'P2']\n",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct initial values",
            "result": "F"
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p1 returns the correct initial values",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p2 returns the correct initial values",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct initial fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns the correct goal fluents",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "air_cargo_p3 returns an object of type problem",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly lists possible actions in a given state",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly constructs all possible actions",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem correctly updates state for a given action",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "AirCargoProblem implements the ignore preconditions heuristic",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5516",
            "description": "AirCargoProblem yields a correct solution when input to breadth_first_search",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "Action levels have the correct number of actions",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "Literal levels have the correct number of literals",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "competing_needs_mutex behaves correctly",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "inconsistent_effects_mutex behaves correctly",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "inconsistent_support_mutex behaves correctly",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "interference_mutex behaves correctly",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "negation_mutex behaves correctly",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "Serialization of mutexes is correct",
            "result": "."
        },
        {
            "traceback": "",
            "rubric_item_id": "5519",
            "description": "levelsum heuristic behaves correctly",
            "result": "."
        }
    ]
}